name: AWS Management Workflow

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  manage-aws-resources:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change to your preferred region

      - name: Start Lambda Function
        run: |
          aws lambda put-function-concurrency --function-name function1 --reserved-concurrent-executions 0
          
      - name: Start ECS Task
        run: |
          aws ecs update-service --cluster Mycluster --service Service --desired-count 2

      - name: Start EC2 Instance
        run: |
          aws ec2 start-instances --instance-ids i-09a914e0c844e384e
          aws ec2 start-instances --instance-ids i-0e8a814bc49b82b16

      - name: Notify Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "Deployment Status:\n EC2 Instance started: '${{ steps.start_ec2.outputs.result }}' \n Reserved Concurrency updated for '${{ steps.increase_concurrency.outputs.result }}' \n ECS Service '${{ steps.start_ecs.outputs.result }}' started. \n Environment on."
          }' $SLACK_WEBHOOK_URL
